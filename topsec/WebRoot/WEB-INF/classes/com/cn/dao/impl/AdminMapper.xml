<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql -->
<!-- 还有一个很重要的作用，使用动态代理开发DAO，1. namespace必须和Mapper接口类路径一致 -->
<mapper namespace="AdminMapper">
	<!-- 根据用户id查询用户 -->
	<!-- 2. id必须和Mapper接口方法名一致 -->
	<!-- 3. parameterType必须和接口方法参数类型一致 -->
	<!-- 4. resultType必须和接口方法返回值类型一致 -->
	<select id="adminLogin" resultType="com.cn.entity.TAdmin"
		parameterType="com.cn.entity.TAdmin">
		select * from t_admin where username = #{userName} and userPw= #{userPw}
	</select>

	<select id="findAll" resultType="com.cn.entity.TAdmin">
		select * from t_admin
	</select>

	<update id="adminUpdate" parameterType="com.cn.entity.TAdmin">
		update t_admin set
		userPw=#{userPw}
		where username=#{userName}
	</update>

	<insert id="save" parameterType="com.cn.entity.TAdmin">

		insert into
		t_admin(userid,userName,userPw)
		values
		(admin_id.nextval,
		#{userName,jdbcType=VARCHAR},
		#{userPw,jdbcType=VARCHAR}
		)
	</insert>
	<delete id="delete" parameterType="Integer">
		delete t_admin where userid = #{userid}
	</delete>
</mapper>