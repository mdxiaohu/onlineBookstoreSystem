<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql -->
<!-- 还有一个很重要的作用，使用动态代理开发DAO，1. namespace必须和Mapper接口类路径一致 -->
<mapper namespace="GonggaoMapper">
	<!-- 根据用户id查询用户 -->
	<!-- 2. id必须和Mapper接口方法名一致 -->
	<!-- 3. parameterType必须和接口方法参数类型一致 -->
	<!-- 4. resultType必须和接口方法返回值类型一致 -->
	<select id="findAll" resultType="com.cn.entity.TGonggao">
		select * from t_gonggao
	</select>

	<select id="findById" resultType="com.cn.entity.TGonggao"
		parameterType="Integer">
		select * from t_gonggao where gonggaoid=#{gonggaoid}
	</select>
	<insert id="save" parameterType="com.cn.entity.TGonggao">

		insert into
		t_gonggao(gonggaoid,gonggaoTitle,gonggaoContent,gonggaoData)
		values
		(gonggao_id.nextval,
		#{gonggaoTitle,jdbcType=VARCHAR},
		#{gonggaoContent,jdbcType=VARCHAR},
		#{gonggaoData,jdbcType=VARCHAR}

		)

	</insert>
	<delete id="deletebyid" parameterType="Integer">
		delete t_gonggao where gonggaoid=#{gonggaoid}
	</delete>



</mapper>